name: main

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: actions/checkout@v2
      - name: Cargo Build
        run: |
          cargo build --release
          cargo build --release --all-features
      - name: Cargo Test
        run: |
          cargo test --release
          cargo test --release --all-features
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: java Test
        run: |
          pushd java
          ./gradlew test
          ./gradlew clean install -xtest
          ./gradlew copy-artifacts
          ./gradlew test
      - name: dotnet Test
        run: |
          dotnet test -c Release dotnet/RuAnnoy.Tests
      - name: dotnet Build - Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          dotnet build -c Release dotnet/RuAnnoy-Batteries-Linux-x64
          dotnet pack -c Release dotnet/RuAnnoy-Batteries-Linux-x64 -o dotnet/artifacts
      - name: dotnet Build - OSX
        if: matrix.os == 'macos-latest'
        run: |
          dotnet build -c Release dotnet/RuAnnoy-Batteries-Darwin-x64
          dotnet pack -c Release dotnet/RuAnnoy-Batteries-Darwin-x64 -o dotnet/artifacts
      - name: dotnet Build - Windows
        if: matrix.os == 'windows-latest'
        run: |
          dotnet build -c Release dotnet/RuAnnoy-Batteries-Windows-x64
          dotnet build -c Release dotnet/RuAnnoy
          dotnet pack -c Release dotnet/RuAnnoy -o dotnet/artifacts
          dotnet pack -c Release dotnet/RuAnnoy-Batteries-Windows-x64 -o dotnet/artifacts
      - uses: actions/upload-artifact@v2
        with:
          path: dotnet/artifacts/*.nupkg
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          path: dotnet/artifacts/*.snupkg
      - uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          path: java/target/release/*.dll
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          path: java/target/release/*.so
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-latest'
        with:
          path: java/target/release/*.dylib
          if-no-files-found: error
      - name: Deploy nugets
        if: github.ref == 'refs/heads/master'
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        shell: pwsh
        run: |
          pushd dotnet/artifacts
          dotnet nuget push *.nupkg --skip-duplicate -s https://api.nuget.org/v3/index.json -k $env:NUGET_API_KEY ; exit 0
